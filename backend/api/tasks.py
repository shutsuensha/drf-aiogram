from datetime import datetime, timedelta, timezone
from zoneinfo import ZoneInfo

import requests
from celery import shared_task

from api.models import Task
from config import settings

API_URL = f"https://api.telegram.org/bot{settings.TELEGRAM_TOKEN}/sendMessage"


@shared_task
def check_tasks_deadline():
    current_time = datetime.now(timezone.utc)
    window_end = current_time + timedelta(minutes=10)
    user_tz = ZoneInfo("Europe/Minsk")

    tasks = Task.objects.filter(status="undone")

    for task in tasks:
        try:
            local_deadline = datetime.strptime(task.deadline, "%d.%m.%Y %H:%M")
            local_deadline = local_deadline.replace(tzinfo=user_tz)
            deadline_utc = local_deadline.astimezone(timezone.utc)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ deadline –¥–ª—è –∑–∞–¥–∞—á–∏ {task.id}: {e}")
            continue

        if current_time <= deadline_utc <= window_end:
            text = (
                f"‚ö†Ô∏è <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!</b>\n"
                f"‚è≥ –í—Ä–µ–º—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É:\n\n"
                f"<b>üìù –ó–∞–¥–∞—á–∞ #{task.id}</b>\n"
                f"<b>üìå –ó–∞–≥–æ–ª–æ–≤–æ–∫:</b> {task.title}\n"
                f"<b>üßæ –û–ø–∏—Å–∞–Ω–∏–µ:</b> {task.description}\n"
                f"<b>‚è∞ –î–µ–¥–ª–∞–π–Ω:</b> {task.deadline} (Europe/Minsk)\n"
                f"<b>üìç –°—Ç–∞—Ç—É—Å:</b> üïí –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
            )
            resp = requests.post(
                API_URL,
                data={
                    "chat_id": task.telegram_user_id,
                    "text": text,
                    "parse_mode": "HTML",
                },
                timeout=10,
            )
            if not resp.ok:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram ({resp.status_code}): {resp.text}")
